import requests
import json
import time
import os
import datetime



def es_dia_laborable(fecha):
    # Comprueba si la fecha proporcionada es un día laborable (lunes a viernes)
    return 0 <= fecha.weekday() <= 4

def descarga_datos(url, headers, data, hora_actual):
    print("Iniciando descarga...")

    # Obtener la fecha actual
    now = datetime.datetime.now()

    # Comprobar si hoy es un día laborable
    if es_dia_laborable(now):
        # Formatear la fecha y hora actual en el formato deseado
        timestamp = now.strftime("%Y-%m-%d-%H-%M-%S")

        current_directory = os.getcwd()

        # Crear el nombre completo del archivo con la ruta completa
        nombre_archivo = os.path.join(current_directory, f'TradingViewData/trading-view-data-{timestamp}.json')

        response = requests.post(url, headers=headers, json=data)

        with open(nombre_archivo, 'w') as json_file:
            json.dump(response.json(), json_file, indent=4)

        print(f'Archivo JSON descargado a las {hora_actual} y guardado como {nombre_archivo}')

    else:
        print("Hoy no es un día laborable. No se realizará la descarga de datos.")

    print("Descargando datos de forma programada, esperando horario...")

        
# Lista de horas en las que deseas ejecutar la descarga del archivo JSON (en formato 24 horas)
horas_programadas = ["09:00", "14:00"]

url = 'https://scanner.tradingview.com/mexico/scan'

headers = {
    'authority': 'scanner.tradingview.com',
    'accept': 'text/plain, */*; q=0.01',
    'accept-language': 'en-US,en;q=0.9',
    'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'cookie': '_sp_ses.cf1a=*; cookiePrivacyPreferenceBannerProduction=notApplicable; cookiesSettings={"analytics":true,"advertising":true}; _ga=GA1.1.680529852.1695342202; device_t=UDhDLTow.wSlrEaNpjaVwaF57J5vIc9wKxwxvlIpHvhr3kCs8uqI; sessionid=gfgv17qp0f0eabcpz1tkesl76kl7uxne; sessionid_sign=v1:uSkyK2ic84OtMSCBM+4HOCoIA0rr5+OLxQFxKiWtQew=; __gads=ID=9a6ddf3202a19b8d:T=1695342334:RT=1695342334:S=ALNI_MZxt4yEkvfNk7LbUXQfSt1DblgSjw; __gpi=UID=000009d26b3be8f8:T=1695342334:RT=1695342334:S=ALNI_MYUf0z3dLI8cZw2vHPNcpWMCWp-Iw; png=13690e06-0f33-4c33-b7da-605d3561b3f6; etg=13690e06-0f33-4c33-b7da-605d3561b3f6; cachec=13690e06-0f33-4c33-b7da-605d3561b3f6; tv_ecuid=13690e06-0f33-4c33-b7da-605d3561b3f6; _sp_id.cf1a=65406742-8496-4ef7-ad9a-4e7c54d8db78.1695342202.1.1695342530.1695342202.08570cf5-abbb-4fd6-990e-4de154c5cd45; _ga_YVVRYGL0E0=GS1.1.1695342202.1.1.1695342530.20.0.0',
    'origin': 'https://es.tradingview.com',
    'referer': 'https://es.tradingview.com/',
    'sec-ch-ua': '',
    'sec-ch-ua-mobile': '?0',
    'sec-ch-ua-platform': '""',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-site',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.5845.111 Safari/537.36',
    'x-usenewauth': 'true'
}

data = {"filter": [],
  "options": {
    "lang": "es"
  },
  "markets": [
    "mexico"
  ],
  "symbols": {
    "query": {
      "types": []
    },
    "tickers": [
      "BMV:MU",
      "BMV:GILD",
      "NYSE:WMT",
      "BMV:FCX",
      "BMV:PE_OLES",
      "NYSE:JNJ",
      "NYSE:NKE",
      "BMV:SITES1/A-1",
      "BMV:MCD",
      "NYSE:X",
      "NYSE:PG",
      "NYSE:PFE",
      "NYSE:CVS",
      "BMV:RCL",
      "NYSE:BRK.A",
      "NYSE:KO",
      "BMV:BSMX/B",
      "BMV:UAL",
      "NYSE:AXP",
      "BMV:WFC",
      "NYSE:BA",
      "NYSE:T",
      "NYSE:TWTR",
      "NYSE:XOM",
      "BMV:TCEHY/N",
      "BMV:CVS",
      "NYSE:GE",
      "NYSE:V",
      "BMV:V",
      "NYSE:TME",
      "NYSE:CRM",
      "NYSE:DIS",
      "BMV:NOK/N",
      "NYSE:C",
      "NYSE:JPM",
      "NYSE:MGM",
      "NYSE:BAC",
      "NYSE:SHOP",
      "NYSE:WFC",
      "NYSE:NIO",
      "NASDAQ:FB",
      "BMV:GE",
      "NASDAQ:BIDU",
      "NYSE:UBER",
      "BMV:ACTDUAL%2fB",
      "BMV:ACTI500%2fB",
      "BMV:ACTICOB%2fB",
      "BMV:ACTICRE%2fB",
      "BMV:ACTIG%2b%2fB",
      "BMV:ACTIG%2b2%2fB",
      "BMV:ACTIGOB%2fB",
      "BMV:ACTIMED%2fB",
      "BMV:ACTINMO%2fB",
      "BMV:ACTINVR%2fB",
      "BMV:ACTIPLU%2fB",
      "BMV:ACTIREN%2fB",
      "BMV:ACTOTAL%2fB",
      "BMV:ACTIVAR%2fB",
      "BMV:ALFA%2fA",
      "BMV:ALPEK%2fA",
      "BMV:AMX%2fA",
      "BMV:AMX%2fL",
      "BMV:ANGELD%2f10",
      "BMV:ASUR%2fB",
      "BMV:AUTLAN%2fB",
      "BMV:AXTEL%2fCPO",
      "BMV:AZTECA%2fCPO",
      "BMV:BABA%2fN",
      "BMV:BACHOCO%2fB",
      "BMV:BIMBO%2fA",
      "BMV:BOLSA%2fA",
      "BMV:CCL1%2fN",
      "BMV:CEMEX%2fCPO",
      "BMV:CETETRC%2fISHRS",
      "BMV:CHDRAUI%2fB",
      "BMV:CMR%2fB",
      "BMV:CORPTRC%2fISHRS",
      "BMV:CSPX%2fN",
      "BMV:CULTIBA%2fB",
      "BMV:DANHOS%2f13",
      "BMV:DIABLOI%2f10",
      "BMV:DIGITAL%2fB",
      "BMV:DINAMO%2fB",
      "BMV:DLRTRAC%2f15",
      "BMV:ECAR%2fN",
      "BMV:EDUCA%2f18",
      "BMV:ESCALA%2fB",
      "BMV:ESFERA%2fB",
      "BMV:ESGMEX%2fISHRS",
      "BMV:FEMSA%2fUBD",
      "BMV:FEMSA%2fUB",
      "BMV:FIBRAHD%2f15",
      "BMV:FIBRAMQ%2f12",
      "BMV:FIBRAPL%2f14",
      "BMV:FIBRATC%2f14",
      "BMV:FIHO%2f12",
      "BMV:FINN%2f13",
      "BMV:FMTY%2f14",
      "BMV:FNOVA%2f17",
      "BMV:FPLUS%2f16",
      "BMV:FSHOP%2f13",
      "BMV:FUNO%2f11",
      "BMV:GAP%2fB",
      "BMV:GBM%2fO",
      "BMV:GCARSO%2fA1",
      "BMV:GENIUS%2f21",
      "BMV:GFAMSA%2fA",
      "BMV:GFINBUR%2fO",
      "BMV:GFNORTE%2fO",
      "BMV:GICSA%2fB",
      "BMV:GISSA%2fA",
      "BMV:GMEXICO%2fB",
      "BMV:GRUMA%2fB",
      "BMV:IB01%2fN",
      "BMV:IB1MXX%2fN",
      "BMV:ICH%2fB",
      "BMV:IVVPESO%2fISHRS",
      "BMV:KIMBER%2fA",
      "BMV:KOF%2fUBL",
      "BMV:LAB%2fB",
      "BMV:TT/N",
      "BMV:AAL",
      "BMV:AAPL",
      "BMV:AAXJ",
      "BMV:ABNB",
      "BMV:AC",
      "BMV:ACTDUAL/B",
      "BMV:ACTI500/B",
      "BMV:ACTICOB/B",
      "BMV:ACTICRE/B",
      "BMV:ACTIG+/B",
      "BMV:ACTIG+2/B",
      "BMV:ACTIGOB/B",
      "BMV:ACTIMED/B",
      "BMV:ACTINMO/B",
      "BMV:ACTINVR/B",
      "BMV:ACTIPLU/B",
      "BMV:ACTIREN/B",
      "BMV:ACTIVAR/B",
      "BMV:ACTOTAL/B",
      "BMV:ACWI",
      "BMV:AEROMEX",
      "BMV:AFRM",
      "BMV:AGUA",
      "BMV:ALFA/A",
      "BMV:ALPEK/A",
      "BMV:ALSEA",
      "BMV:AMC",
      "BMV:AMD",
      "BMV:AMX/A",
      "BMV:AMX/L",
      "BMV:AMZN",
      "BMV:ANGELD/10",
      "BMV:APA",
      "BMV:ARA",
      "BMV:ASUR/B",
      "BMV:ATER",
      "BMV:ATOS",
      "BMV:AUTLAN/B",
      "BMV:AXDX",
      "BMV:AXP",
      "BMV:AXTEL/CPO",
      "BMV:AZTECA/CPO",
      "BMV:BABA/N",
      "BMV:BAC",
      "BMV:BACHOCO/B",
      "BMV:BBBY",
      "BMV:BIL",
      "BMV:BIMBO/A",
      "BMV:BKCH",
      "BMV:BND",
      "BMV:BNGO",
      "BMV:BOLSA/A",
      "BMV:BOTZ",
      "BMV:BRKB",
      "BMV:BYND",
      "BMV:C",
      "BMV:CCL1/N",
      "BMV:CEMEX/CPO",
      "BMV:CETETRC/ISHRS",
      "BMV:CHDRAUI/B",
      "BMV:CIBR",
      "BMV:CMOCTEZ",
      "BMV:CMR/B",
      "BMV:COIN",
      "BMV:CORPTRC/ISHRS",
      "BMV:CRM",
      "BMV:CSCO",
      "BMV:CSPX/N",
      "BMV:CUERVO",
      "BMV:CULTIBA/B",
      "BMV:DANHOS/13",
      "BMV:DIA",
      "BMV:DIABLOI/10",
      "BMV:DIGITAL/B",
      "BMV:DINAMO/B",
      "BMV:DIS",
      "BMV:DKNG1",
      "BMV:DLRTRAC/15",
      "BMV:DRIP",
      "BMV:DRIV",
      "BMV:DVN",
      "BMV:ECAR/N",
      "BMV:EDC",
      "BMV:EDUCA/18",
      "BMV:EDZ",
      "BMV:ELEKTRA",
      "BMV:ESCALA/B",
      "BMV:ESFERA/B",
      "BMV:ESGMEX/ISHRS",
      "BMV:EWG",
      "BMV:EWZ",
      "BMV:F",
      "BMV:FAS",
      "BMV:FAZ",
      "BMV:FEMSA/UBD",
      "BMV:FEMSA/UB",
      "BMV:FIBRAHD/15",
      "BMV:FIBRAMQ/12",
      "BMV:FIBRAPL/14",
      "BMV:FIBRATC/14",
      "BMV:FIHO/12",
      "BMV:FINN/13",
      "BMV:FMTY/14",
      "BMV:FNOVA/17",
      "BMV:FPLUS/16",
      "BMV:FSHOP/13",
      "BMV:FUBO",
      "BMV:FUNO/11",
      "BMV:GAP/B",
      "BMV:GBM/O",
      "BMV:GCARSO/A1",
      "BMV:GCC",
      "BMV:GDX",
      "BMV:GENIUS/21",
      "BMV:GENTERA",
      "BMV:GFAMSA/A",
      "BMV:GFINBUR/O",
      "BMV:GFNORTE/O",
      "BMV:GICSA/B",
      "BMV:GISSA/A",
      "BMV:GLD",
      "BMV:GM",
      "BMV:GME",
      "BMV:GMEXICO/B",
      "BMV:GMXT",
      "BMV:GOOG",
      "BMV:GOOGL",
      "BMV:GPROFUT",
      "BMV:GRUMA/B",
      "BMV:GUSH",
      "BMV:HCITY",
      "BMV:HERDEZ",
      "BMV:HOMEX",
      "BMV:HOTEL",
      "BMV:IAU",
      "BMV:IB01/N",
      "BMV:IB1MXX/N",
      "BMV:ICH/B",
      "BMV:ICLN",
      "BMV:INDA",
      "BMV:INTC",
      "BMV:IVV",
      "BMV:IVVPESO/ISHRS",
      "BMV:IWM",
      "BMV:JNJ",
      "BMV:JNUG",
      "BMV:JPM",
      "BMV:KIMBER/A",
      "BMV:KO",
      "BMV:KOF/UBL",
      "BMV:LAB/B",
      "BMV:LABD",
      "BMV:LABU",
      "BMV:LACOMER/UBC",
      "BMV:LALA/B",
      "BMV:LCID",
      "BMV:LIT",
      "BMV:LIVEPOL/C-1",
      "BMV:LMND",
      "BMV:LQDA/N",
      "BMV:MARA",
      "BMV:MAXIMO/B",
      "BMV:MAYA/B",
      "BMV:MCHI",
      "BMV:MEDICA/B",
      "BMV:MEGA/CPO",
      "BMV:META",
      "BMV:MEXTRAC/9",
      "BMV:MFRISCO/A-1",
      "BMV:MRNA",
      "BMV:MRO",
      "BMV:MSFT",
      "BMV:NAFTRAC/ISHRS",
      "BMV:NCLH/N",
      "BMV:NEMAK/A",
      "BMV:NFLX",
      "BMV:NIO/N",
      "BMV:NKE",
      "BMV:NKLA",
      "BMV:NU/N",
      "BMV:NVAX",
      "BMV:NVDA",
      "BMV:NVTA",
      "BMV:OMA/B",
      "BMV:OPORT1/B",
      "BMV:ORBIA",
      "BMV:OXY1",
      "BMV:PE&OLES",
      "BMV:PFE",
      "BMV:PINFRA",
      "BMV:PLTR",
      "BMV:PLUG",
      "BMV:PSQ",
      "BMV:PYPL",
      "BMV:Q",
      "BMV:QCOM",
      "BMV:QLD",
      "BMV:QQQ",
      "BMV:QVGMEX/18",
      "BMV:QYLD",
      "BMV:R/A",
      "BMV:RIOT",
      "BMV:ROBOTIK/B",
      "BMV:ROKU",
      "BMV:SALUD/B",
      "BMV:SBUX",
      "BMV:SHOP/N",
      "BMV:SHV",
      "BMV:SHY",
      "BMV:SIMEC/B",
      "BMV:SLV",
      "BMV:SNAP",
      "BMV:SOFI",
      "BMV:SORIANA/B",
      "BMV:SOXL",
      "BMV:SOXS",
      "BMV:SOXX",
      "BMV:SPCE",
      "BMV:SPLG",
      "BMV:SPORT/S",
      "BMV:SPXS",
      "BMV:SPY",
      "BMV:SQ",
      "BMV:SQQQ",
      "BMV:SRET1",
      "BMV:T",
      "BMV:TAL/N",
      "BMV:TAN",
      "BMV:TECL",
      "BMV:TECS",
      "BMV:TEMATIK/B",
      "BMV:TERRA/13",
      "BMV:TGT",
      "BMV:TLEVISA/CPO",
      "BMV:TMM/A",
      "BMV:TQQQ",
      "BMV:TRAXION/A",
      "BMV:TSLA",
      "BMV:TWTR",
      "BMV:TZA",
      "BMV:UBER",
      "BMV:UDITRAC/ISHRS",
      "BMV:UNG",
      "BMV:UPST",
      "BMV:USO",
      "BMV:VALUEGF/O",
      "BMV:VASCONI",
      "BMV:VEA",
      "BMV:VESTA",
      "BMV:VGK",
      "BMV:VGT",
      "BMV:VINTE",
      "BMV:VISTA/A",
      "BMV:VIXY",
      "BMV:VMEX/19",
      "BMV:VNQ",
      "BMV:VOLAR/A",
      "BMV:VOO",
      "BMV:VRM",
      "BMV:VT",
      "BMV:VTI",
      "BMV:VUAA/N",
      "BMV:VWO",
      "BMV:VYM",
      "BMV:WALMEX",
      "BMV:WBD",
      "BMV:WISH",
      "BMV:WMT",
      "BMV:X",
      "BMV:XLE",
      "BMV:XLF",
      "BMV:XLK",
      "BMV:XLV",
      "BMV:XOM",
      "BMV:XPEV/N",
      "BMV:YANG",
      "BMV:YINN",
      "BMV:ZM",
      "NASDAQ:TQQQ",
      "AMEX:DRIP",
      "AMEX:TECS",
      "AMEX:SOXS",
      "AMEX:QYLD",
      "AMEX:SPXS",
      "AMEX:VIXY",
      "AMEX:EDZ",
      "AMEX:LABD",
      "AMEX:SQQQ",
      "AMEX:JNUG",
      "AMEX:FAZ",
      "AMEX:VYM",
      "AMEX:ICLN",
      "AMEX:QVGMEX",
      "AMEX:VNQ",
      "AMEX:INDA",
      "AMEX:DLRTRAC",
      "AMEX:BND",
      "AMEX:VGK",
      "AMEX:SHY",
      "AMEX:BIL",
      "AMEX:DIABLOI",
      "AMEX:DRIV",
      "AMEX:GLD",
      "AMEX:XLV",
      "AMEX:IAU",
      "AMEX:GDX",
      "AMEX:IB1MXX",
      "AMEX:CETETRC",
      "AMEX:VMEX",
      "AMEX:NAFTRAC",
      "AMEX:CORPTRC",
      "AMEX:DIA",
      "AMEX:ECAR",
      "AMEX:EWZ",
      "AMEX:FIBRATC",
      "AMEX:LQDA",
      "AMEX:MEXTRAC",
      "AMEX:PSQ",
      "AMEX:SHV",
      "AMEX:SPLG",
      "AMEX:TAN",
      "AMEX:TZA",
      "AMEX:UDITRAC",
      "AMEX:VTI",
      "AMEX:YANG",
      "AMEX:IB01",
      "AMEX:ESGMEX",
      "AMEX:SLV",
      "AMEX:VEA",
      "AMEX:IWM",
      "AMEX:EWG",
      "AMEX:VGT",
      "AMEX:SRET1",
      "AMEX:AAXJ",
      "AMEX:CSPX",
      "AMEX:XLF",
      "AMEX:ACWI",
      "AMEX:VOO",
      "AMEX:VT",
      "AMEX:VWO",
      "AMEX:SPY",
      "AMEX:IVVPESO",
      "AMEX:IVV",
      "AMEX:GENIUS",
      "AMEX:VUAA",
      "AMEX:QQQ",
      "AMEX:LIT",
      "AMEX:BOTZ",
      "AMEX:XLK",
      "AMEX:SOXX",
      "AMEX:XLE",
      "AMEX:FAS",
      "AMEX:EDC",
      "AMEX:ANGELD",
      "AMEX:USO",
      "AMEX:QLD",
      "AMEX:MCHI",
      "AMEX:TQQQ",
      "AMEX:BKCH",
      "AMEX:LABU",
      "AMEX:UNG",
      "AMEX:CIBR",
      "AMEX:SOXL",
      "AMEX:GUSH",
      "AMEX:YINN",
      "AMEX:SPXL",
      "NASDAQ:SQQQ",
      "NASDAQ:GOOG",
      "NASDAQ:GOOGL"
    ]
  },
  "columns": [
    "logoid",
    "name",
    "close",
    "volume",
    "Value.Traded",
    "earnings_release_date",
    "earnings_release_next_date",
    "market_cap_basic",
    "change_from_open",
    "change",
    "Recommend.All",
    "Recommend.MA",
    "Recommend.Other",
    "relative_volume_10d_calc",
    "name",
    "gross_profit_yoy_growth_fy",
    "gross_profit_qoq_growth_fq",
    "gross_profit_yoy_growth_fq",
    "gross_profit_yoy_growth_ttm",
    "gross_margin",
    "after_tax_margin",
    "net_income",
    "total_revenue",
    "last_annual_revenue",
    "earnings_per_share_basic_ttm",
    "earnings_per_share_forecast_next_fq",
    "ebitda_yoy_growth_ttm",
    "RSI",
    "MACD.macd",
    "Volatility.W",
    "Volatility.D",
    "Perf.3M",
    "Perf.Y",
    "Perf.6M",
    "Perf.1M",
    "Perf.W",
    "Perf.YTD",
    "sector",
    "exchange",
    "description",
    "type",
    "subtype",
    "update_mode",
    "pricescale",
    "minmov",
    "fractional",
    "minmove2",
    "Candle.AbandonedBaby.Bullish",
    "Candle.AbandonedBaby.Bearish",
    "Candle.Doji",
    "Candle.Doji.Gravestone",
    "Candle.Doji.Dragonfly",
    "Candle.Engulfing.Bullish",
    "Candle.Engulfing.Bearish",
    "Candle.MorningStar",
    "Candle.EveningStar",
    "Candle.ShootingStar",
    "Candle.Harami.Bullish",
    "Candle.Harami.Bearish",
    "Candle.HangingMan",
    "Candle.LongShadow.Lower",
    "Candle.LongShadow.Upper",
    "Candle.Hammer",
    "Candle.InvertedHammer",
    "Candle.Marubozu.White",
    "Candle.Marubozu.Black",
    "Candle.Kicking.Bullish",
    "Candle.Kicking.Bearish",
    "Candle.SpinningTop.White",
    "Candle.SpinningTop.Black",
    "Candle.3BlackCrows",
    "Candle.TriStar.Bullish",
    "Candle.TriStar.Bearish",
    "Candle.3WhiteSoldiers",
    "RSI[1]",
    "MACD.signal",
    "currency",
    "fundamental_currency_code"
  ],
  "sort": {
    "sortBy": "MACD.macd",
    "sortOrder": "asc"
  },
  "price_conversion": {
    "to_symbol": False
  },
  "range": [
    0,
    150
  ]
}


print("Descargando datos de forma programada, esperando horario...")

hora_actual = time.strftime("%H:%M")
descarga_datos(url, headers, data, hora_actual)    


while True:
    # Obtener la hora actual
    hora_actual = time.strftime("%H:%M")

    # Si la hora actual coincide con alguna hora programada, realiza la descarga
    if hora_actual in horas_programadas:
       descarga_datos(url, headers, data, hora_actual)        

    # Esperar 1 minuto antes de volver a verificar la hora
    time.sleep(60)
